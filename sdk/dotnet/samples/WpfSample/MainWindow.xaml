<Window x:Class="WpfSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfSample" 
        xmlns:types="clr-namespace:WpfSample.Types"
        xmlns:v1="clr-namespace:DSIO.Filters.Api.Sdk.Types.V1;assembly=DSIO.Filters.Api.Sdk.Types"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Closing="MainWindow_OnClosing"
        Title="WPF Sample"
        Height="800" Width="800">

    <Window.Resources>
        <local:ObjectToJsonConverter x:Key="JsonConverter"/>

        <!-- We declare providers for Enum types for use in ComboBoxes -->
        <ObjectDataProvider x:Key="SelectEnhancementModeEnumValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="v1:SelectFilterParameters+EnhancementModes" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="SupremeTaskNameEnumValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="v1:SupremeFilterParameters+TaskNames" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="AETaskNameEnumValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="v1:AEFilterParameters+TaskNames" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </Window.Resources>

    <Grid Margin="6">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- API Credentials Login -->
        <GroupBox Grid.Row="0" Margin="4">
            <GroupBox.Header>
                <Label>Login</Label>
            </GroupBox.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0">Api Username:</Label>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ApiUserName}"></TextBox>
                <Label Grid.Row="1" Grid.Column="0">Api Key:</Label>
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ApiKey}"></TextBox>

                <Button x:Name="BtnLogin"
                        Grid.Row="0" Grid.Column="2"
                        Margin="5"
                        Click="BtnLogin_OnClick"
                        Width="150">
                    Login
                </Button>
                <TextBlock Grid.Row="1" Grid.Column="2"
                           Margin="5"
                           TextAlignment="Center"
                           Text="{Binding LoginStatus}" />
            </Grid>
        </GroupBox>

        <!-- Images section -->
        <GroupBox Grid.Row="1" Margin="4" IsEnabled="{Binding IsAuthenticated}">
            <GroupBox.Header>
                <Label>Images</Label>
            </GroupBox.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button x:Name="BtnCreateImage"
                            Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                            Margin="6"
                            Padding="12, 6"
                            Click="BtnCreateImage_OnClick">Create Resource by Uploading Image</Button>
                <Button x:Name="BtnCreateImageFromModalitySession"
                            Grid.Row="1" Grid.Column="0"
                            Margin="6"
                            Padding="12, 10"
                            Click="BtnCreateImageFromModalitySession_OnClick">Create Resource From Modality Session</Button>
                <Grid Grid.Row="1" Grid.Column="1" Margin="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0">Session Id:</Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ModalitySessionId}"></TextBox>
                    <Label Grid.Row="1" Grid.Column="0">Image Id:</Label>
                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ModalityImageId}"></TextBox>
                </Grid>

                <Button x:Name="BtnGetImageDetails"
                        Grid.Row="2" Grid.Column="0"
                        Margin="6"
                        Padding="12, 6"
                        Click="BtnGetImageDetails_OnClick">
                    Get Image Details
                </Button>
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding ImageResourceId}" Margin="6"></TextBox>

                <!-- Show DeviceInfo labels in col 0 -->
                <StackPanel Grid.Row="3" Grid.Column="0" Margin="6">
                    <TextBlock>Resource Id:</TextBlock>
                    <TextBlock>Created:</TextBlock>
                    <TextBlock>Expires:</TextBlock>
                    <TextBlock>Media Type:</TextBlock>
                    <TextBlock>Url:</TextBlock>
                    <TextBlock>ImageInfo:</TextBlock>
                    <TextBlock>Modality Session Id:</TextBlock>
                    <TextBlock>Modality Session Image Id:</TextBlock>
                </StackPanel>
                <!-- Show DeviceInfo data in col 1 -->
                <StackPanel Grid.Row="3" Grid.Column="1" Margin="6">
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.Id}"></TextBlock>
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.CreatedOn}"></TextBlock>
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.Expires}"></TextBlock>
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.MediaType}"></TextBlock>
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.Url}"></TextBlock>
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.ImageInfo, Converter={StaticResource JsonConverter}}"></TextBlock>
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.ModalitySession.SessionId}"></TextBlock>
                    <TextBlock Margin="4,0" Text="{Binding SelectedImageResource.ModalitySession.ImageId}"></TextBlock>
                </StackPanel>

                <Button x:Name="BtnDeleteImage"
                            Grid.Row="4" Grid.Column="0"
                            Margin="6,0"
                            Click="BtnDeleteImage_OnClick">Delete Image</Button>
                <TextBlock Grid.Row="4" Grid.Column="1" Margin="4" Text="{Binding SelectedImageResource.Id}"></TextBlock>
                </Grid>
        </GroupBox>

        <!-- Images section  IsEnabled="{Binding IsAuthenticated}"-->
        <GroupBox Grid.Row="2" Margin="4" >
            <GroupBox.Header>
                <Label>Filters</Label>
            </GroupBox.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="100" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Combo box to select filter -->
                <ComboBox x:Name="TbxAeFilter" Grid.Row="0" Grid.Column="0"
                    Margin="4"
                    DisplayMemberPath="Key"
                    SelectedValuePath="Key"
                    SelectedValue="{Binding Path=SelectedFilterParam, Mode=TwoWay}"
                    ItemsSource="{Binding Path=FilterParamList}"></ComboBox>

                <!-- Button to apply current filter -->
                <Button x:Name="BtnFilter" Grid.Row="0" Grid.Column="1"
                    Margin="6"
                    Padding="12, 10"
                    Click="BtnFilter_OnClick">Apply Filter</Button>

                <!-- Filter parameter content -->
                <!-- We use DockPanels with DataTriggers to control visibility so the proper filter
                     parameters are displayed when the user selects a filter from the above ComboBox -->
                <DockPanel Grid.Row="1" Grid.Column="0" LastChildFill="False" Margin="12">
                    <DockPanel.Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedFilterParam}" Value="{x:Static types:FilterType.Select}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Style>

                    <!-- Select Filter Parameters -->
                    <Label>Enhancement Mode:</Label>
                    <ComboBox Width="150"
                              SelectedItem="{Binding SelectFilterParam.EnhancementMode}"
                              ItemsSource="{Binding Source={StaticResource SelectEnhancementModeEnumValues}}">
                    </ComboBox>
                </DockPanel>


                <!-- Display the filtered image -->
                <Image x:Name="FilteredImage" Grid.Row="1" Grid.Column="1" />
            </Grid>
        </GroupBox>

    </Grid>
</Window>
